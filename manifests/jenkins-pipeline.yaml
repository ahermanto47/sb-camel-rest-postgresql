apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    application: sb-camel-rest-postgresql
  name: "sb-camel-rest-postgresql-pipeline"
spec:
  source:
    type: Git
    git:
      uri: https://github.com/ahermanto47/sb-camel-rest-postgresql
      ref: main
  triggers:
    - github:
        secret: secret
      type: GitHub
    - generic:
        secret: secret
      type: Generic
  strategy:
    type: "JenkinsPipeline"
    jenkinsPipelineStrategy:
      jenkinsfile: |-
        pipeline {
          agent {
            kubernetes {
              label "jenkins"
              cloud 'openshift'
              serviceAccount 'jenkins'
              containerTemplate {
                name 'jnlp'
                image "image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-maven"
                alwaysPullImage true
                workingDir '/tmp'
                args '${computer.jnlpmac} ${computer.name}'
                ttyEnabled false
              }
            }
          }
          stages{
            stage("Checkout") {
              steps {
                git branch: "main", url: "https://github.com/ahermanto47/sb-camel-rest-postgresql.git"
                stash excludes: 'target/**,lib/**', name: 'source'
              }
            }           

            stage("Build") {
              steps {
                unstash 'source'
                sh "ls"
                sh "mvn clean package"
                stash includes: 'target/*.jar', name: 'jar'
              }
            }

            stage('Build Image') {
              steps {
                unstash 'jar'
                sh 'ls target'
                sh "cp target/*.jar target/ROOT.jar"
                script {
                  openshift.withCluster() {
                    openshift.withProject("poc-dev") {
                      openshift.selector("bc", "sb-camel-rest-postgresql").startBuild("--from-file=target/ROOT.jar", "--wait=true")
                    }
                  }
                }
              }
            }
            stage('Deploy') {
              steps {
                sh "oc new-app --name=sb-camel-rest-postgresql --image=default-route-openshift-image-registry.apps-crc.testing/poc-dev/sb-camel-rest-postgresql --allow-missing-images --as-deployment-config -n poc-dev"
                sleep 10
                sh "oc expose service/sb-camel-rest-postgresql"
              }
            }
          }           
        }
